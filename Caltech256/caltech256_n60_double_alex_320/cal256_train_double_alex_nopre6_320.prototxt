name: "double_AlexNet"
layers {
  name: "data"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "/media/tmp/cal256_n60/cal256_train_lmdb_n60_320"
    backend: LMDB
    batch_size: 20
  }
  transform_param {
    crop_size: 280
    mean_file: "/home/tj/tpj/cal256_n60/cal256_mean_n60_320.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}
layers {
  name: "data"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "/media/tmp/cal256_n60/cal256_test_lmdb_n60_320"
    backend: LMDB
    batch_size: 20
  }
  transform_param {
    crop_size: 280
    mean_file: "/home/tj/tpj/cal256_n60/cal256_mean_n60_320.binaryproto"
    mirror: false
  }
  include: { phase: TEST }
}

#################################################################################################

layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "relu1"
  type: RELU
  bottom: "conv1"
  top: "conv1"
}
layers {
  name: "norm1"
  type: LRN
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layers {
  name: "pool1"
  type: POOLING
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "pool1"
  top: "conv2"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "relu2"
  type: RELU
  bottom: "conv2"
  top: "conv2"
}
layers {
  name: "norm2"
  type: LRN
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layers {
  name: "pool2"
  type: POOLING
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layers {
  name: "conv3"
  type: CONVOLUTION
  bottom: "pool2"
  top: "conv3"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "relu3"
  type: RELU
  bottom: "conv3"
  top: "conv3"
}
layers {
  name: "conv4"
  type: CONVOLUTION
  bottom: "conv3"
  top: "conv4"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "relu4"
  type: RELU
  bottom: "conv4"
  top: "conv4"
}
layers {
  name: "conv5"
  type: CONVOLUTION
  bottom: "conv4"
  top: "conv5"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "relu5"
  type: RELU
  bottom: "conv5"
  top: "conv5"
}
layers {
  name: "pool5"
  type: POOLING
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}


layers {
  name: "fc6"
  type: INNER_PRODUCT
  bottom: "pool5"
  top: "fc6"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "relu6"
  type: RELU
  bottom: "fc6"
  top: "fc6"
}
layers {
  name: "drop6"
  type: DROPOUT
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}

####################################################################################
####################################################################################

layers {
  name: "conv1_1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1_1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 6
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "relu1_1"
  type: RELU
  bottom: "conv1_1"
  top: "conv1_1"
}
layers {
  name: "norm1_1"
  type: LRN
  bottom: "conv1_1"
  top: "norm1_1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layers {
  name: "pool1_1"
  type: POOLING
  bottom: "norm1_1"
  top: "pool1_1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layers {
  name: "conv2_1"
  type: CONVOLUTION
  bottom: "pool1_1"
  top: "conv2_1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "relu2_1"
  type: RELU
  bottom: "conv2_1"
  top: "conv2_1"
}
layers {
  name: "norm2_1"
  type: LRN
  bottom: "conv2_1"
  top: "norm2_1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layers {
  name: "pool2_1"
  type: POOLING
  bottom: "norm2_1"
  top: "pool2_1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layers {
  name: "conv3_1"
  type: CONVOLUTION
  bottom: "pool2_1"
  top: "conv3_1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "relu3_1"
  type: RELU
  bottom: "conv3_1"
  top: "conv3_1"
}
layers {
  name: "conv4_1"
  type: CONVOLUTION
  bottom: "conv3_1"
  top: "conv4_1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "relu4_1"
  type: RELU
  bottom: "conv4_1"
  top: "conv4_1"
}
layers {
  name: "conv5_1"
  type: CONVOLUTION
  bottom: "conv4_1"
  top: "conv5_1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "relu5_1"
  type: RELU
  bottom: "conv5_1"
  top: "conv5_1"
}
layers {
  name: "pool5_1"
  type: POOLING
  bottom: "conv5_1"
  top: "pool5_1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}


layers {
  name: "fc6_1"
  type: INNER_PRODUCT
  bottom: "pool5_1"
  top: "fc6_1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "relu6_1"
  type: RELU
  bottom: "fc6_1"
  top: "fc6_1"
}
layers {
  name: "drop6_1"
  type: DROPOUT
  bottom: "fc6_1"
  top: "fc6_1"
  dropout_param {
    dropout_ratio: 0.5
  }
}


###############################################################################

layers {
  name: "concatcross"
  type: CONCAT
  bottom: "fc6"
  bottom: "fc6_1"
  top: "concatcross"
}

layers {
  name: "fc7"
  type: INNER_PRODUCT
  bottom: "concatcross"
  top: "fc7"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "relu7"
  type: RELU
  bottom: "fc7"
  top: "fc7"
}
layers {
  name: "drop7"
  type: DROPOUT
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.8
  }
}  


######################################

layers {
  name: "fc7_1"
  type: INNER_PRODUCT
  bottom: "concatcross"
  top: "fc7_1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "relu7_1"
  type: RELU
  bottom: "fc7_1"
  top: "fc7_1"
}
layers {
  name: "drop7_1"
  type: DROPOUT
  bottom: "fc7_1"
  top: "fc7_1"
  dropout_param {
    dropout_ratio: 0.8
  }
}

####################################################################################

layers {
  name: "concatdata"
  type: CONCAT
  bottom: "fc7"
  bottom: "fc7_1"
  top: "concatdata"
}


layers {
  name: "ip_concatdata"
  type: INNER_PRODUCT
  bottom: "concatdata"
  top: "ip_concatdata"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
  


###################################################################################


layers {
  name: "ip8"
  type: INNER_PRODUCT
  bottom: "ip_concatdata"
  top: "ip8"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "accuracy1"
  type: ACCURACY
  bottom: "ip8"
  bottom: "label"
  top: "accuracy1"
  include: { phase: TEST }
}

layers {
  bottom: "ip8"
  bottom: "label"
  top: "accuracy2"
  name: "accuracy2"
  type: ACCURACY
  accuracy_param {
    top_k: 5
  }
  include { phase: TEST }
}


layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "ip8"
  bottom: "label"
  top: "loss"
}

layers {
  name: "softmax"
  type: SOFTMAX
  bottom: "ip8"
  top: "softmax"
  include { phase: TEST }
}

